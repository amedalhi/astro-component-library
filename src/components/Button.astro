---
//imports
import type { HTMLAttributes } from "astro/types";
import "../styles/global.css" //this can be at the MainLayout level.

interface Props extends HTMLAttributes<"button"> {
  type?: "button" | "submit";
  size?: "sm" | "md" | "lg";
  notFilled?: boolean;
  theme?:
    | "primary"
    | "secondary"
    | "success"
    | "danger"
    | "warning"
    | "info"
    | "light"
    | "dark";
  classes?: string;
  radius?: "square" | "sharp" | "natural" | "round"
}

const {
  classes, 
  type = "button",
  size= "md",
  notFilled, 
  theme = "primary",
  radius = "square",
  ...rest
} = Astro.props;

//Button Themes
const background = `var(--${theme})`;
const foreground = theme === "light" ? "var(--primary)" : "var(--light)";
---

<button class:list={[classes, {filled: !notFilled}]} {type} data-size={size} data-radius={radius} {...rest}>
  <slot/>
</button>

<style define:vars={{background, foreground}}>

  button {
    font: inherit;
    cursor: pointer;

    /*variables*/
    --bkg: var(--background);
    --color: var(--foreground);
    
    /*default*/
    display: flex;
    gap: 0.2em;
    align-items: center;
    background-color: var(--light);
    color: var(--bkg);
    border: 0.2em solid var(--bkg);
    padding: 0.4em 1.25em;
    transition: box-shadow 0.2s cubic-bezier(0.075, 0.82, 0.165, 1),
      opacity 0.2s cubic-bezier(0.075, 0.82, 0.165, 1),
      scale 0.2s cubic-bezier(0.075, 0.82, 0.165, 1);
  }

  button.filled {
    background-color: var(--bkg);
    color: var(--color);
    border: none;
  }

  button:focus {
    outline-color: transparent;
  }

  button:hover {
    opacity: 0.8;
    scale: 1.05;
  }

  button:focus-visible {
    box-shadow: 0 0 0 0.1em var(--light), 0 0 0 0.3em var(--bkg);
  }

  [data-size="sm"] {
    font-size: 0.8rem;
  }
  [data-size="md"] {
    font-size: 1.1rem;``
  }
  [data-size="lg"] {
    font-size: 1.5rem;
  }

  [data-radius="square"] {
    border-radius: 0;
  }
  [data-radius="sharp"] {
    border-radius: var(--radius-sharp);
  }
  [data-radius="natural"] {
    border-radius: var(--radius-natural);
  }
  [data-radius="round"] {
    border-radius: var(--radius-round);
  }
</style>